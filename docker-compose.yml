version: '3.9'
services:
  flask:
    container_name: flask
    build: 
      context: frontend
      dockerfile: Dockerfile.flask
    restart: on-failure
    networks:
    - frontend

  nginx:
    container_name: nginx
    build:
      context: frontend
      dockerfile: Dockerfile.nginx
    restart: on-failure
    networks:
      - frontend
    ports: 
      - 8080:80

  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - frontend
      - backend
    ports:
      - 5000:5000

  database:
    container_name: db
    image: postgres:14-alpine
    restart: on-failure
    networks:
      - backend
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}

volumes:    
  db:
  static:

networks:
  frontend:
  backend:
